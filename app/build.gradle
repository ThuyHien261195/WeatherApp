plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")

def keystoreProperties = new Properties()

if (keystorePropertiesFile.canRead()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion "30.0.3"

    signingConfigs {
        if (keystoreProperties.containsKey('debugStoreFile')) {
            debugConfig {
                keyAlias keystoreProperties['debugKeyAlias']
                keyPassword keystoreProperties['debugKeyPassword']
                storeFile file(keystoreProperties['debugStoreFile'])
                storePassword keystoreProperties['debugStorePassword']
            }
        }

        if (keystoreProperties.containsKey('releaseStoreFile')) {
            releaseConfig {
                keyAlias keystoreProperties['releaseKeyAlias']
                keyPassword keystoreProperties['releaseKeyPassword']
                storeFile file(keystoreProperties['releaseStoreFile'])
                storePassword keystoreProperties['releaseStorePassword']
            }
        }
    }

    defaultConfig {
        applicationId "com.media2359.weatherapp"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true

            if (keystoreProperties.containsKey('debugStoreFile')) {
                signingConfig signingConfigs.debugConfig
            }
        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            if (keystoreProperties.containsKey('releaseStoreFile')) {
                signingConfig signingConfigs.releaseConfig
            }
        }
    }

    flavorDimensions "default"

    productFlavors {
        dev {
            dimension "default"
            buildConfigField "String", "END_POINT", "\"https://api.openweathermap.org/data/2.5/\""
            buildConfigField "String", "APPLICATION_ID", "\"60c6fbeb4b93ac653c492ba806fc346d\""
            buildConfigField "String", "SAFETYNET_API_KEY", "\"AIzaSyDjXiwPhe3pQHkpGZrqHLLaEzfE5twxOHA\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors
            allWarningsAsErrors = true

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xopt-in=kotlin.Experimental"
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
    implementation deps.kotlin_std

    implementation deps.core_ktx
    implementation deps.app_compat
    implementation deps.constraint_layout
    implementation deps.recyclerview
    implementation deps.swiperefreshlayout
    implementation deps.material
    implementation deps.fragment_ktx

    testImplementation deps.junit
    testImplementation deps.junit_ktx
    testImplementation deps.arch_core_testing
    testImplementation deps.core_ktx
    testImplementation deps.robolectric
    testImplementation deps.mockk
    testImplementation deps.coroutines_test
    testImplementation deps.mock_web_server
    testImplementation deps.hamcrest

    implementation deps.dagger
    kapt deps.dagger_compiler
    implementation deps.dagger_android
    implementation deps.dagger_android_support
    kapt deps.dagger_android_processor

    implementation deps.okhttp
    implementation deps.okhttp_logging_interceptor

    implementation deps.retrofit
    implementation deps.retrofit_gson_converter

    implementation deps.viewmodel
    implementation deps.livedata
    implementation deps.coroutines

    implementation deps.room_runtime
    kapt deps.room_compiler
    implementation deps.room_ktx

    implementation deps.timber

    implementation deps.safetynet

    implementation deps.rootbeer
}